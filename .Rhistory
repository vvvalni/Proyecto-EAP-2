install.packages("flexdashboard")
library(dygraphs)
dygraph(ldeaths)
dygraph(mdeaths)
library(flexdashboard)
library(rio)
data = import("finalData.csv")
mapDIS=sf::read_sf("shapes/Lima.shp") #shapefile
#Juntamos información con el shape:
mapDIS2=merge(mapDIS,data,by.x='IDDIST',by.y='UBIGEO', all.x = T) #siempre primero el shape
View(data)
table(data$GANADOR)
40/43
gauge(93, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
gauge(93, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
3/43
gauge(93, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
library(ggplot2)
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`ACCION POPULAR`),color = "gray")
mapa= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Acción Popular") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`ACCION POPULAR`),color = "gray")
mapa= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Acción Popular") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa
names(data)
vote = data[,c(1,15,29)]
View(vote)
datatable(vote, filter = "top")
library(factoextra)
datatable(vote, filter = "top")
library(kableExtra)
datatable(vote, filter = "top")
library(DT)
datatable(vote, filter = "top")
ausen = data[,c(1,13)]
colnames(ausen)[2] = "AUSENTISMO"
View(ausen)
datatable(ausen, filter = "top")
ggplot(data, aes(x=IDH_2019, y=AUSEN)) +
geom_point(size=1.5, shape=23, color="blue") +
geom_text(label=data$DISTRITO, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(title = "Ausentismo e IDH a nivel distrital",
x = "IDH",
y = "Ausentismo") +
geom_smooth(method=lm, se=FALSE, linetype="dashed",
color="darkred") + theme(panel.background = element_blank())
View(data)
data$tDISC = data$DISC_2020/data$POB_2020
data$tMAS80 = data$MAS80_2020/data$POB_2020
library(kableExtra)
model=list('AP'=data)
modelsummary(modelo, title = "OLS",
stars = TRUE,
output = "kableExtra")
library(modelsummary)
View(data)
cor_g = data[,c("AP", "IDH_2019", "tDISC","tMAS80","IVA","POBREZA_2019")]
cor_g = data[,c("AP","IDH_2019", "tDISC","tMAS80","IVA","POBREZA_2019")]
names(data)
cor_g = data[,c("ACCION POPULAR","IDH_2019", "tDISC","tMAS80","IVA","POBREZA_2019")]
View(cor_g)
library(polycor)
corMatrix=polycor::hetcor(cor_g)$correlations
library(ggcorrplot)
ggcorrplot(corMatrix)
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("finalData.csv")
mapDIS=sf::read_sf("shapes/Lima.shp") #shapefile
#Juntamos información con el shape:
mapDIS2=merge(mapDIS,data,by.x='IDDIST',by.y='UBIGEO', all.x = T) #siempre primero el shape
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=GANADOR),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_manual(values=c("firebrick","dodgerblue2")) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "bottom") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Victoria a nivel distrital") +
theme(
plot.title = element_text(color="black", size=11, face="bold"))
mapa1
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`ACCION POPULAR`),color = "gray")
mapa= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Acción Popular") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa
mapaleyendaL= ggplot(mapDIS2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDIS2,
aes(fill=`PODEMOS POR EL PROGRESO DEL PERU`),color = "gray")
mapa2= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "dodgerblue2", breaks=seq(from=0, to=100, by=20)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "% de votos válidos por Podemos") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa2
vote = data[,c(1,15,29)]
datatable(vote, filter = "top")
ausen = data[,c(1,13)]
colnames(ausen)[2] = "AUSENTISMO"
datatable(ausen, filter = "top")
ggplot(data, aes(x=IDH_2019, y=AUSEN)) +
geom_point(size=1.5, shape=23, color="blue") +
geom_text(label=data$DISTRITO, vjust=-0.5, hjust = 1,color="black", size=3) +
labs(x = "IDH",
y = "Ausentismo") +
geom_smooth(method=lm, se=FALSE, linetype="dashed",
color="darkred") + theme(panel.background = element_blank())
colnames(data)[15] = "AP"
data$tDISC = data$DISC_2020/data$POB_2020
data$tMAS80 = data$MAS80_2020/data$POB_2020
modelo = lm(AP ~ IDH_2019 + tDISC + tMAS80 + IVA + POBREZA_2019, data = data)
model=list('AP'=data)
modelsummary(modelo, title = "OLS",
stars = TRUE,
output = "kableExtra")
View(data)
cor_g = data[,c("AP","IDH_2019", "tDISC","tMAS80","IVA","POBREZA_2019")]
library(polycor)
corMatrix=polycor::hetcor(cor_g)$correlations
library(ggcorrplot)
ggcorrplot(corMatrix)
head(ausen)%>%
rmarkdown::paged_table()
models=list('AP[1]'=modelo,
'AP[2]'=modelo1,
'AP[3]'=modelo2)
modelo = lm(AP ~ IDH_2019, data = data)
modelo1 = lm(AP ~ IDH_2019 + tDISC + tMAS80, data = data)
modelo2 = lm(AP ~ IDH_2019 + tDISC + tMAS80 + IVA + POBREZA_2019, data = data)
models=list('AP[1]'=modelo,
'AP[2]'=modelo1,
'AP[3]'=modelo2)
modelsummary(models, title = "Resultados de todos los modelos",
stars = TRUE,
output = "kableExtra")
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("finalData.csv")
data = import("finalData.csv")
setwd("C:/Users/VALERIA/OneDrive/Escritorio/Estadistica-2-Practicas/S9/ERM2018-master/ERM2018-master")
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("finalData.csv")
mapDIS=sf::read_sf("shapes/Lima.shp") #shapefile
#Juntamos información con el shape:
mapDIS2=merge(mapDIS,data,by.x='IDDIST',by.y='UBIGEO', all.x = T) #siempre primero el shape
setwd("C:/Users/VALERIA/OneDrive/Escritorio/Proyecto-EAP-2")
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("data_final.xlsx")
data = import("Bases de Datos/data_final.xlsx")
mapDIS=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
data = import("Bases de Datos/data_final.xlsx")
mapDIS=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
library(flexdashboard)
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("Bases de Datos/data_final.xlsx")
mapDIS=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
library(sf)
mapDEP=sf::read_sf("World_Countries_Generalized.shp")
library(sf)
mapDEP=sf::read_sf("Shapes/World_Countries_Generalized.shp")
head(mapDEP)
View(data)
data = import("Bases de Datos/data_final.xlsx")
mapDIS=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
library(flexdashboard)
library(rio)
library(ggplot2)
library(DT)
library(kableExtra)
library(modelsummary)
data = import("Bases de Datos/data_final.xlsx")
mapMUN=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
head(mapMUN)
View(data)
#Juntamos información con el shape:
mapMUN2=merge(mapMUN,data,by = "ISO", all.x = T)
head(mapMUN2)
head(mapMUN)
names(mapMUN)
names(data)
data = import("Bases de Datos/data_final.xlsx")
mapMUN=sf::read_sf("shapes/World_Countries_Generalized.shp") #shapefile
#Juntamos información con el shape:
mapMUN2=merge(mapMUN,data,by = "ISO", all.x = T)
head(mapMUN2)
tail(mapMUN2)
mapaleyendaL= ggplot(mapMUN2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapMUN2,
aes(fill=`violencia`),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "orange", breaks=seq(from=0, to=100, by=10)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Índice de violencia de género por país") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa2
mapaleyendaL= ggplot(mapMUN2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapMUN2,
aes(fill=`violencia`),color = "gray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "orange", breaks=seq(from=0, to=100, by=10)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Índice de violencia de género por país") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa1
mapaleyendaL= ggplot(mapMUN2)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapMUN2,
aes(fill=`violencia`),color = "lightgray")
mapa1= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "orange", breaks=seq(from=0, to=100, by=10)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = "right") + labs(fill=" ") + theme(legend.text = element_text(size = 8)) +
labs(title = "Índice de violencia de género por país") +
theme(
plot.title = element_text(color="black", size=10, face="bold"))
mapa1
